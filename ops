{"version":1,"ops":[{"type":1,"author":{"id":"ba1625a6608e712ded2a67f4a8029f0ddc5b0159"},"timestamp":1360880173,"metadata":{"github-id":"MDU6SXNzdWUxMTAxNjIwMw==","github-url":"https://github.com/perl11/p2/issues/6","origin":"github"},"title":"Enable cc -O optimizations for JIT","message":"Old code worked because -O2 was not enabled due to a Makefile error.\nbisected to:\ncommit 6e17808541b92a3fc8feab5f4b91269d1e7496f5\nAuthor: Reini Urban rurban@cpanel.net\nDate:   Wed Jan 16 12:18:25 2013 -0600\n\n```\nMAKE revamp: sync new config.inc with core/config.h\n```\n\nWith gcc -O or -O2 two JIT tests fail:\n  test/closures/long.pn, test/classes/creature.pn\nSee 95b129492aba7617d5f2ea6aa6a49db17bf602d4\nBoth tests pass with -B and segfault with -X if compiled with -O\n\n```\n[18] loadpn   15 29 ; 14\n[19] call     0 15  \n[20] return   0     \n; function end\n```\n\nsigsegv with val the result value being a raw **29** (0x1d, the value of the B register in loadpn),\nand not the sum encoded as PN_NUM.\n\n```\n121       if (verbose) {\n122         potion_send(potion_send(val, PN_string), PN_print);\n\n-- jit --\n; function definition: 0x7ffff7f53cb0 ; 548 bytes\n0x0 push %rbp\n0x1 mov %rsp, %rbp\n0x4 sub 0x130, %rsp\n0xb mov %rdi, 0x70(%rbp)\n0xf mov %rsi, 0x68(%rbp)\n0x13    mov %rdx, 0x60(%rbp)\n0x17    mov %rdx, -0x8(%rbp)\n0x1b    mov 0x70(%rbp), %rdi\n0x1f    mov 0x68(%rbp), %rsi\n0x23    mov 0x0, %rax\n0x2d    mov %rax, -0x8(%rbp)\n0x31    mov -0x8(%rbp), %rdx\n0x35    mov 0x7ffff7fecebf, %rax\n0x3f    call %rax\n0x41    mov %rax, -0x8(%rbp)\n0x45    mov 0x7ffff7f2c060, %rax\n0x4f    mov %rax, 0x70(%rbp)\n0x53    mov -0x8(%rbp), %rdx\n0x57    mov %rdx, 0x78(%rbp)\n0x5b    mov 0x78(%rbp), %rax\n0x5f    mov %rax, -0x8(%rbp)\n0x63    mov 0x60(%rbp), %rax\n0x67    mov %rax, -0x10(%rbp)\n0x6b    mov 0x3, %rax\n0x75    mov %rax, -0x18(%rbp)\n0x79    mov 0x5, %rax\n0x83    mov %rax, -0x20(%rbp)\n0x87    mov 0x7, %rax\n0x91    mov %rax, -0x28(%rbp)\n0x95    mov 0x9, %rax\n0x9f    mov %rax, -0x30(%rbp)\n0xa3    mov 0xb, %rax\n0xad    mov %rax, -0x38(%rbp)\n0xb1    mov 0xd, %rax\n0xbb    mov %rax, -0x40(%rbp)\n0xbf    mov 0xf, %rax\n0xc9    mov %rax, -0x48(%rbp)\n0xcd    mov 0x11, %rax\n0xd7    mov %rax, -0x50(%rbp)\n0xdb    mov 0x13, %rax\n0xe5    mov %rax, -0x58(%rbp)\n0xe9    mov 0x15, %rax\n0xf3    mov %rax, -0x60(%rbp)\n0xf7    mov 0x17, %rax\n0x101   mov %rax, -0x68(%rbp)\n0x105   mov 0x19, %rax\n0x10f   mov %rax, -0x70(%rbp)\n0x113   mov 0x1b, %rax\n0x11d   mov %rax, -0x78(%rbp)\n0x121   mov 0x1d, %rax\n0x12b   mov %rax, -0x80(%rbp)\n0x12f   mov -0x8(%rbp), %rax\n0x133   test 0x1, %al\n0x136   jnz 0x17c\n0x138   test 0xfffffff8, %eax\n0x13e   jz 0x17c\n0x140   and 0xfffffffffffffff8, %rax\n0x144   cmp 0x25000a, (%rax)\n0x14a   jnz 0x170\n0x14c   mov 0x70(%rbp), %rdi\n0x150   mov -0x8(%rbp), %rdx\n0x154   mov 0x7ffff7fd6c9a, %rax\n0x15e   call %rax\n0x160   mov %rax, -0x10(%rbp)\n0x164   mov -0x8(%rbp), %rax\n0x168   mov 0x38(%rax), %rax\n0x16c   mov %rax, -0x8(%rbp)\n0x170   cmp 0x250005, (%rax)\n0x176   jz 0x196\n0x178   mov -0x8(%rbp), %rax\n0x17c   mov %rax, -0x10(%rbp)\n0x180   mov 0x70(%rbp), %rdi\n0x184   mov -0x8(%rbp), %rsi\n0x188   mov 0x7ffff7fd740f, %rax\n0x192   call %rax\n0x194   jmp 0x19a\n0x196   mov -0x8(%rbp), %rax\n0x19a   mov 0x8(%rax), %rax\n0x19e   mov 0x70(%rbp), %rdi\n0x1a2   mov -0x8(%rbp), %rsi\n0x1a6   mov -0x80(%rbp), %rbx\n0x1aa   mov %rbx, 0x50(%rsp)\n0x1af   mov -0x78(%rbp), %rbx\n0x1b3   mov %rbx, 0x48(%rsp)\n0x1b8   mov -0x70(%rbp), %rbx\n0x1bc   mov %rbx, 0x40(%rsp)\n0x1c1   mov -0x68(%rbp), %rbx\n0x1c5   mov %rbx, 0x38(%rsp)\n0x1ca   mov -0x60(%rbp), %rbx\n0x1ce   mov %rbx, 0x30(%rsp)\n0x1d3   mov -0x58(%rbp), %rbx\n0x1d7   mov %rbx, 0x28(%rsp)\n0x1dc   mov -0x50(%rbp), %rbx\n0x1e0   mov %rbx, 0x20(%rsp)\n0x1e5   mov -0x48(%rbp), %rbx\n0x1e9   mov %rbx, 0x18(%rsp)\n0x1ee   mov -0x40(%rbp), %rbx\n0x1f2   mov %rbx, 0x10(%rsp)\n0x1f7   mov -0x38(%rbp), %rbx\n0x1fb   mov %rbx, 0x8(%rsp)\n0x200   mov -0x30(%rbp), %rbx\n0x204   mov %rbx, (%rsp)\n0x208   mov -0x28(%rbp), %r9\n0x20c   mov -0x20(%rbp), %r8\n0x210   mov -0x18(%rbp), %rcx\n0x214   mov -0x10(%rbp), %rdx\n0x218   call %rax\n0x21a   mov %rax, -0x8(%rbp)\n0x21e   mov -0x8(%rbp), %rax\n0x222   leave \n0x223   ret \n\nProgram received signal SIGSEGV, Segmentation fault.\npotion_gc_reserved (P=P@entry=0x1d, cl=cl@entry=0, self=self@entry=0) at core/gc.c:609\n609   int total = (char *)P-\u003emem-\u003ebirth_hi - (char *)P-\u003emem-\u003ebirth_lo;\n(gdb) bt\n#0  potion_gc_reserved (P=P@entry=0x1d, cl=cl@entry=0, self=self@entry=0) at core/gc.c:609\n#1  0x0000000000401973 in potion_cmd_compile (filename=0x7fffffffe991 \"test/closures/long.pn\", exec=exec@entry=2, \n    verbose=verbose@entry=2, sp=sp@entry=0x7fffffffe598) at core/potion.c:120\n#2  0x0000000000401fc9 in main (argc=4, argv=0x7fffffffe6b8) at core/potion.c:242\n\nresp. without -V\nStarting program: ./potion -I test/closures/long.pn\n\nProgram received signal SIGSEGV, Segmentation fault.\n0x00007ffff7fd8f13 in potion_bind (P=P@entry=0x1d, rcv=211, msg=140737353310016) at core/objmodel.c:249\n249   if (!PN_TYPECHECK(t)) return PN_NIL;\n(gdb) bt\n#0  0x00007ffff7fd8f13 in potion_bind (P=P@entry=0x1d, rcv=211, msg=140737353310016) at core/objmodel.c:249\n#1  0x00000000004019f7 in potion_cmd_compile (filename=\u003coptimized out\u003e, exec=exec@entry=2, verbose=verbose@entry=1, \n    sp=sp@entry=0x7fffffffe598) at core/potion.c:122\n#2  0x0000000000401fc9 in main (argc=3, argv=0x7fffffffe6b8) at core/potion.c:242\n```","files":null}]}