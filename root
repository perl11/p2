{"version":1,"ops":[{"type":1,"author":{"id":"ba1625a6608e712ded2a67f4a8029f0ddc5b0159"},"timestamp":1361466295,"metadata":{"github-id":"MDU6SXNzdWUxMTI0OTUzNg==","github-url":"https://github.com/perl11/p2/issues/10","origin":"github"},"title":"scoped syntax grammars","message":"potion blocks are closures with scoped mixins. so it's easy to override all methods in a scope, by switching to a new parser, eventually changed compiler rules and translate to p2 data.\nThe syntax need not to be dynamically loadable for this, indep of issue #11  \n\n```\n{ use v6;\n  # parse and run perl 6 code - ingy!\n}\n# back to p5\n\n# ffi\nmy $num = 1.5;\n{ use syntax 'C'; # load syntax-C\n  #include \u003cmath.h\u003e\n  #pragma perl $num =\u003e double\n  #pragma perl $result \u003c= double n\n  double n = sqrt(2.0 + $num);\n}\nsay \"sqrt(2+$num) =\u003e $result\";\n\nmy $dbh = DBI-\u003e($data_source, $username, $auth);\nmy $t = 'sometable';\n{ use syntax 'SQL' =\u003e $dbh;\n  SELECT * FROM $t;\n}\n```","files":null}]}